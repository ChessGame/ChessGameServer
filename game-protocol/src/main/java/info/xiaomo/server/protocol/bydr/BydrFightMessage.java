// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BydrFightMessage.proto

package info.xiaomo.server.protocol.bydr;

public final class BydrFightMessage {
  private BydrFightMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UseSkillRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = UseSkillReq];
    /**
     * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();

    // optional int32 skillId = 2;
    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    boolean hasSkillId();
    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    int getSkillId();
  }
  /**
   * Protobuf type {@code UseSkillRequest}
   *
   * <pre>
   *使用技能
   * </pre>
   */
  public static final class UseSkillRequest extends
      com.google.protobuf.GeneratedMessage
      implements UseSkillRequestOrBuilder {
    // Use UseSkillRequest.newBuilder() to construct.
    private UseSkillRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UseSkillRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UseSkillRequest defaultInstance;
    public static UseSkillRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UseSkillRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UseSkillRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              skillId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_UseSkillRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_UseSkillRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UseSkillRequest> PARSER =
        new com.google.protobuf.AbstractParser<UseSkillRequest>() {
      public UseSkillRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UseSkillRequest(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<UseSkillRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = UseSkillReq];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    // optional int32 skillId = 2;
    public static final int SKILLID_FIELD_NUMBER = 2;
    private int skillId_;
    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    public boolean hasSkillId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 skillId = 2;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    public int getSkillId() {
      return skillId_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillReq;
      skillId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, skillId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, skillId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UseSkillRequest}
     *
     * <pre>
     *使用技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_UseSkillRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_UseSkillRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillReq;
        bitField0_ = (bitField0_ & ~0x00000001);
        skillId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_UseSkillRequest_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.skillId_ = skillId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasSkillId()) {
          setSkillId(other.getSkillId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = UseSkillReq];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillReq;
      /**
       * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = UseSkillReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillReq;
        onChanged();
        return this;
      }

      // optional int32 skillId = 2;
      private int skillId_ ;
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public boolean hasSkillId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public int getSkillId() {
        return skillId_;
      }
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public Builder setSkillId(int value) {
        bitField0_ |= 0x00000002;
        skillId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 skillId = 2;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public Builder clearSkillId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        skillId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UseSkillRequest)
    }

    static {
      defaultInstance = new UseSkillRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UseSkillRequest)
  }

  public interface UseSkillResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = UseSkillRes];
    /**
     * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();

    // optional int64 rid = 2;
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *使用技能玩家ID
     * </pre>
     */
    boolean hasRid();
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *使用技能玩家ID
     * </pre>
     */
    long getRid();

    // optional int32 skillId = 3;
    /**
     * <code>optional int32 skillId = 3;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    boolean hasSkillId();
    /**
     * <code>optional int32 skillId = 3;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    int getSkillId();

    // optional int32 result = 4;
    /**
     * <code>optional int32 result = 4;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>optional int32 result = 4;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    int getResult();
  }
  /**
   * Protobuf type {@code UseSkillResponse}
   *
   * <pre>
   *使用技能
   * </pre>
   */
  public static final class UseSkillResponse extends
      com.google.protobuf.GeneratedMessage
      implements UseSkillResponseOrBuilder {
    // Use UseSkillResponse.newBuilder() to construct.
    private UseSkillResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UseSkillResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UseSkillResponse defaultInstance;
    public static UseSkillResponse getDefaultInstance() {
      return defaultInstance;
    }

    public UseSkillResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UseSkillResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              skillId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              result_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_UseSkillResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_UseSkillResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<UseSkillResponse> PARSER =
        new com.google.protobuf.AbstractParser<UseSkillResponse>() {
      public UseSkillResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UseSkillResponse(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<UseSkillResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = UseSkillRes];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    // optional int64 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private long rid_;
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *使用技能玩家ID
     * </pre>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *使用技能玩家ID
     * </pre>
     */
    public long getRid() {
      return rid_;
    }

    // optional int32 skillId = 3;
    public static final int SKILLID_FIELD_NUMBER = 3;
    private int skillId_;
    /**
     * <code>optional int32 skillId = 3;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    public boolean hasSkillId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 skillId = 3;</code>
     *
     * <pre>
     *技能配置ID
     * </pre>
     */
    public int getSkillId() {
      return skillId_;
    }

    // optional int32 result = 4;
    public static final int RESULT_FIELD_NUMBER = 4;
    private int result_;
    /**
     * <code>optional int32 result = 4;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 result = 4;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillRes;
      rid_ = 0L;
      skillId_ = 0;
      result_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, skillId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, result_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, skillId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UseSkillResponse}
     *
     * <pre>
     *使用技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_UseSkillResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_UseSkillResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillRes;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        skillId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_UseSkillResponse_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.skillId_ = skillId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasSkillId()) {
          setSkillId(other.getSkillId());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.UseSkillResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = UseSkillRes];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillRes;
      /**
       * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = UseSkillRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.UseSkillRes;
        onChanged();
        return this;
      }

      // optional int64 rid = 2;
      private long rid_ ;
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *使用技能玩家ID
       * </pre>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *使用技能玩家ID
       * </pre>
       */
      public long getRid() {
        return rid_;
      }
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *使用技能玩家ID
       * </pre>
       */
      public Builder setRid(long value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *使用技能玩家ID
       * </pre>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 skillId = 3;
      private int skillId_ ;
      /**
       * <code>optional int32 skillId = 3;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public boolean hasSkillId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 skillId = 3;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public int getSkillId() {
        return skillId_;
      }
      /**
       * <code>optional int32 skillId = 3;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public Builder setSkillId(int value) {
        bitField0_ |= 0x00000004;
        skillId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 skillId = 3;</code>
       *
       * <pre>
       *技能配置ID
       * </pre>
       */
      public Builder clearSkillId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        skillId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 result = 4;
      private int result_ ;
      /**
       * <code>optional int32 result = 4;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 result = 4;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional int32 result = 4;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000008;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 result = 4;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000008);
        result_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UseSkillResponse)
    }

    static {
      defaultInstance = new UseSkillResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UseSkillResponse)
  }

  public interface FireRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = FireReq];
    /**
     * <code>optional .MID mid = 1 [default = FireReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = FireReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();

    // optional int32 gold = 3;
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    int getGold();

    // optional float angleX = 4;
    /**
     * <code>optional float angleX = 4;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    boolean hasAngleX();
    /**
     * <code>optional float angleX = 4;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    float getAngleX();

    // optional float angleY = 5;
    /**
     * <code>optional float angleY = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    boolean hasAngleY();
    /**
     * <code>optional float angleY = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    float getAngleY();

    // optional int64 targetFishId = 6;
    /**
     * <code>optional int64 targetFishId = 6;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    boolean hasTargetFishId();
    /**
     * <code>optional int64 targetFishId = 6;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    long getTargetFishId();
  }
  /**
   * Protobuf type {@code FireRequest}
   *
   * <pre>
   *开炮
   * </pre>
   */
  public static final class FireRequest extends
      com.google.protobuf.GeneratedMessage
      implements FireRequestOrBuilder {
    // Use FireRequest.newBuilder() to construct.
    private FireRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FireRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FireRequest defaultInstance;
    public static FireRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FireRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FireRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              gold_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000004;
              angleX_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000008;
              angleY_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              targetFishId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_FireRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_FireRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FireRequest> PARSER =
        new com.google.protobuf.AbstractParser<FireRequest>() {
      public FireRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FireRequest(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<FireRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = FireReq];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = FireReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = FireReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    // optional int32 gold = 3;
    public static final int GOLD_FIELD_NUMBER = 3;
    private int gold_;
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional float angleX = 4;
    public static final int ANGLEX_FIELD_NUMBER = 4;
    private float angleX_;
    /**
     * <code>optional float angleX = 4;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public boolean hasAngleX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float angleX = 4;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public float getAngleX() {
      return angleX_;
    }

    // optional float angleY = 5;
    public static final int ANGLEY_FIELD_NUMBER = 5;
    private float angleY_;
    /**
     * <code>optional float angleY = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public boolean hasAngleY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float angleY = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public float getAngleY() {
      return angleY_;
    }

    // optional int64 targetFishId = 6;
    public static final int TARGETFISHID_FIELD_NUMBER = 6;
    private long targetFishId_;
    /**
     * <code>optional int64 targetFishId = 6;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    public boolean hasTargetFishId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 targetFishId = 6;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    public long getTargetFishId() {
      return targetFishId_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.FireReq;
      gold_ = 0;
      angleX_ = 0F;
      angleY_ = 0F;
      targetFishId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(4, angleX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(5, angleY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, targetFishId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, angleX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, angleY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, targetFishId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FireRequest}
     *
     * <pre>
     *开炮
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_FireRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_FireRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireReq;
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        angleX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        angleY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        targetFishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_FireRequest_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.angleX_ = angleX_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.angleY_ = angleY_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.targetFishId_ = targetFishId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasAngleX()) {
          setAngleX(other.getAngleX());
        }
        if (other.hasAngleY()) {
          setAngleY(other.getAngleY());
        }
        if (other.hasTargetFishId()) {
          setTargetFishId(other.getTargetFishId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.FireRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = FireReq];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.FireReq;
      /**
       * <code>optional .MID mid = 1 [default = FireReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = FireReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireReq;
        onChanged();
        return this;
      }

      // optional int32 gold = 3;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000002;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional float angleX = 4;
      private float angleX_ ;
      /**
       * <code>optional float angleX = 4;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public boolean hasAngleX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float angleX = 4;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public float getAngleX() {
        return angleX_;
      }
      /**
       * <code>optional float angleX = 4;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder setAngleX(float value) {
        bitField0_ |= 0x00000004;
        angleX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angleX = 4;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder clearAngleX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angleX_ = 0F;
        onChanged();
        return this;
      }

      // optional float angleY = 5;
      private float angleY_ ;
      /**
       * <code>optional float angleY = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public boolean hasAngleY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float angleY = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public float getAngleY() {
        return angleY_;
      }
      /**
       * <code>optional float angleY = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder setAngleY(float value) {
        bitField0_ |= 0x00000008;
        angleY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angleY = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder clearAngleY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        angleY_ = 0F;
        onChanged();
        return this;
      }

      // optional int64 targetFishId = 6;
      private long targetFishId_ ;
      /**
       * <code>optional int64 targetFishId = 6;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public boolean hasTargetFishId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 targetFishId = 6;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public long getTargetFishId() {
        return targetFishId_;
      }
      /**
       * <code>optional int64 targetFishId = 6;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public Builder setTargetFishId(long value) {
        bitField0_ |= 0x00000010;
        targetFishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 targetFishId = 6;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public Builder clearTargetFishId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        targetFishId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FireRequest)
    }

    static {
      defaultInstance = new FireRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FireRequest)
  }

  public interface FireResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = FireRes];
    /**
     * <code>optional .MID mid = 1 [default = FireRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = FireRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();

    // optional int64 rid = 3;
    /**
     * <code>optional int64 rid = 3;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    boolean hasRid();
    /**
     * <code>optional int64 rid = 3;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    long getRid();

    // optional int32 gold = 4;
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    int getGold();

    // optional float angleX = 5;
    /**
     * <code>optional float angleX = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    boolean hasAngleX();
    /**
     * <code>optional float angleX = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    float getAngleX();

    // optional float angleY = 6;
    /**
     * <code>optional float angleY = 6;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    boolean hasAngleY();
    /**
     * <code>optional float angleY = 6;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    float getAngleY();

    // optional int64 targetFishId = 7;
    /**
     * <code>optional int64 targetFishId = 7;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    boolean hasTargetFishId();
    /**
     * <code>optional int64 targetFishId = 7;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    long getTargetFishId();
  }
  /**
   * Protobuf type {@code FireResponse}
   *
   * <pre>
   *开炮
   * </pre>
   */
  public static final class FireResponse extends
      com.google.protobuf.GeneratedMessage
      implements FireResponseOrBuilder {
    // Use FireResponse.newBuilder() to construct.
    private FireResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FireResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FireResponse defaultInstance;
    public static FireResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FireResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FireResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              gold_ = input.readInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000008;
              angleX_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000010;
              angleY_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              targetFishId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_FireResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_FireResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FireResponse> PARSER =
        new com.google.protobuf.AbstractParser<FireResponse>() {
      public FireResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FireResponse(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<FireResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = FireRes];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = FireRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = FireRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    // optional int64 rid = 3;
    public static final int RID_FIELD_NUMBER = 3;
    private long rid_;
    /**
     * <code>optional int64 rid = 3;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 rid = 3;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    public long getRid() {
      return rid_;
    }

    // optional int32 gold = 4;
    public static final int GOLD_FIELD_NUMBER = 4;
    private int gold_;
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional float angleX = 5;
    public static final int ANGLEX_FIELD_NUMBER = 5;
    private float angleX_;
    /**
     * <code>optional float angleX = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public boolean hasAngleX() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float angleX = 5;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public float getAngleX() {
      return angleX_;
    }

    // optional float angleY = 6;
    public static final int ANGLEY_FIELD_NUMBER = 6;
    private float angleY_;
    /**
     * <code>optional float angleY = 6;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public boolean hasAngleY() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float angleY = 6;</code>
     *
     * <pre>
     *角度
     * </pre>
     */
    public float getAngleY() {
      return angleY_;
    }

    // optional int64 targetFishId = 7;
    public static final int TARGETFISHID_FIELD_NUMBER = 7;
    private long targetFishId_;
    /**
     * <code>optional int64 targetFishId = 7;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    public boolean hasTargetFishId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 targetFishId = 7;</code>
     *
     * <pre>
     *目标鱼
     * </pre>
     */
    public long getTargetFishId() {
      return targetFishId_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.FireRes;
      rid_ = 0L;
      gold_ = 0;
      angleX_ = 0F;
      angleY_ = 0F;
      targetFishId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(5, angleX_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(6, angleY_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(7, targetFishId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, angleX_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, angleY_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, targetFishId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FireResponse}
     *
     * <pre>
     *开炮
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_FireResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_FireResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireRes;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        angleX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        angleY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        targetFishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_FireResponse_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.angleX_ = angleX_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.angleY_ = angleY_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.targetFishId_ = targetFishId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasAngleX()) {
          setAngleX(other.getAngleX());
        }
        if (other.hasAngleY()) {
          setAngleY(other.getAngleY());
        }
        if (other.hasTargetFishId()) {
          setTargetFishId(other.getTargetFishId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = FireRes];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.FireRes;
      /**
       * <code>optional .MID mid = 1 [default = FireRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = FireRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireRes;
        onChanged();
        return this;
      }

      // optional int64 rid = 3;
      private long rid_ ;
      /**
       * <code>optional int64 rid = 3;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 rid = 3;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public long getRid() {
        return rid_;
      }
      /**
       * <code>optional int64 rid = 3;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public Builder setRid(long value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rid = 3;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 gold = 4;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000004;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional float angleX = 5;
      private float angleX_ ;
      /**
       * <code>optional float angleX = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public boolean hasAngleX() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float angleX = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public float getAngleX() {
        return angleX_;
      }
      /**
       * <code>optional float angleX = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder setAngleX(float value) {
        bitField0_ |= 0x00000008;
        angleX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angleX = 5;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder clearAngleX() {
        bitField0_ = (bitField0_ & ~0x00000008);
        angleX_ = 0F;
        onChanged();
        return this;
      }

      // optional float angleY = 6;
      private float angleY_ ;
      /**
       * <code>optional float angleY = 6;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public boolean hasAngleY() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float angleY = 6;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public float getAngleY() {
        return angleY_;
      }
      /**
       * <code>optional float angleY = 6;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder setAngleY(float value) {
        bitField0_ |= 0x00000010;
        angleY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angleY = 6;</code>
       *
       * <pre>
       *角度
       * </pre>
       */
      public Builder clearAngleY() {
        bitField0_ = (bitField0_ & ~0x00000010);
        angleY_ = 0F;
        onChanged();
        return this;
      }

      // optional int64 targetFishId = 7;
      private long targetFishId_ ;
      /**
       * <code>optional int64 targetFishId = 7;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public boolean hasTargetFishId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 targetFishId = 7;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public long getTargetFishId() {
        return targetFishId_;
      }
      /**
       * <code>optional int64 targetFishId = 7;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public Builder setTargetFishId(long value) {
        bitField0_ |= 0x00000020;
        targetFishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 targetFishId = 7;</code>
       *
       * <pre>
       *目标鱼
       * </pre>
       */
      public Builder clearTargetFishId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        targetFishId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FireResponse)
    }

    static {
      defaultInstance = new FireResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FireResponse)
  }

  public interface FireResultRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = FireResultReq];
    /**
     * <code>optional .MID mid = 1 [default = FireResultReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = FireResultReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();

    // repeated int64 targetFishId = 3;
    /**
     * <code>repeated int64 targetFishId = 3;</code>
     *
     * <pre>
     *击中目标鱼ID
     * </pre>
     */
    java.util.List<Long> getTargetFishIdList();
    /**
     * <code>repeated int64 targetFishId = 3;</code>
     *
     * <pre>
     *击中目标鱼ID
     * </pre>
     */
    int getTargetFishIdCount();
    /**
     * <code>repeated int64 targetFishId = 3;</code>
     *
     * <pre>
     *击中目标鱼ID
     * </pre>
     */
    long getTargetFishId(int index);

    // optional int32 multiple = 4;
    /**
     * <code>optional int32 multiple = 4;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼
     * </pre>
     */
    boolean hasMultiple();
    /**
     * <code>optional int32 multiple = 4;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼
     * </pre>
     */
    int getMultiple();

    // optional int64 specialFishId = 5;
    /**
     * <code>optional int64 specialFishId = 5;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    boolean hasSpecialFishId();
    /**
     * <code>optional int64 specialFishId = 5;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    long getSpecialFishId();

    // optional int32 fireGold = 6;
    /**
     * <code>optional int32 fireGold = 6;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    boolean hasFireGold();
    /**
     * <code>optional int32 fireGold = 6;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    int getFireGold();
  }
  /**
   * Protobuf type {@code FireResultRequest}
   *
   * <pre>
   *伤害结果
   * </pre>
   */
  public static final class FireResultRequest extends
      com.google.protobuf.GeneratedMessage
      implements FireResultRequestOrBuilder {
    // Use FireResultRequest.newBuilder() to construct.
    private FireResultRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FireResultRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FireResultRequest defaultInstance;
    public static FireResultRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FireResultRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FireResultRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                targetFishId_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              targetFishId_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                targetFishId_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                targetFishId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              multiple_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              specialFishId_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              fireGold_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          targetFishId_ = java.util.Collections.unmodifiableList(targetFishId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_FireResultRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_FireResultRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FireResultRequest> PARSER =
        new com.google.protobuf.AbstractParser<FireResultRequest>() {
      public FireResultRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FireResultRequest(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<FireResultRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = FireResultReq];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = FireResultReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = FireResultReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    // repeated int64 targetFishId = 3;
    public static final int TARGETFISHID_FIELD_NUMBER = 3;
    private java.util.List<Long> targetFishId_;
    /**
     * <code>repeated int64 targetFishId = 3;</code>
     *
     * <pre>
     *击中目标鱼ID
     * </pre>
     */
    public java.util.List<Long>
        getTargetFishIdList() {
      return targetFishId_;
    }
    /**
     * <code>repeated int64 targetFishId = 3;</code>
     *
     * <pre>
     *击中目标鱼ID
     * </pre>
     */
    public int getTargetFishIdCount() {
      return targetFishId_.size();
    }
    /**
     * <code>repeated int64 targetFishId = 3;</code>
     *
     * <pre>
     *击中目标鱼ID
     * </pre>
     */
    public long getTargetFishId(int index) {
      return targetFishId_.get(index);
    }

    // optional int32 multiple = 4;
    public static final int MULTIPLE_FIELD_NUMBER = 4;
    private int multiple_;
    /**
     * <code>optional int32 multiple = 4;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼
     * </pre>
     */
    public boolean hasMultiple() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 multiple = 4;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼
     * </pre>
     */
    public int getMultiple() {
      return multiple_;
    }

    // optional int64 specialFishId = 5;
    public static final int SPECIALFISHID_FIELD_NUMBER = 5;
    private long specialFishId_;
    /**
     * <code>optional int64 specialFishId = 5;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    public boolean hasSpecialFishId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 specialFishId = 5;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    public long getSpecialFishId() {
      return specialFishId_;
    }

    // optional int32 fireGold = 6;
    public static final int FIREGOLD_FIELD_NUMBER = 6;
    private int fireGold_;
    /**
     * <code>optional int32 fireGold = 6;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    public boolean hasFireGold() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fireGold = 6;</code>
     *
     * <pre>
     *开炮金币
     * </pre>
     */
    public int getFireGold() {
      return fireGold_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultReq;
      targetFishId_ = java.util.Collections.emptyList();
      multiple_ = 0;
      specialFishId_ = 0L;
      fireGold_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      for (int i = 0; i < targetFishId_.size(); i++) {
        output.writeInt64(3, targetFishId_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, multiple_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, specialFishId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, fireGold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < targetFishId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(targetFishId_.get(i));
        }
        size += dataSize;
        size += 1 * getTargetFishIdList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, multiple_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, specialFishId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, fireGold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FireResultRequest}
     *
     * <pre>
     *伤害结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_FireResultRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_FireResultRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultReq;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetFishId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        multiple_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        specialFishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        fireGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_FireResultRequest_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          targetFishId_ = java.util.Collections.unmodifiableList(targetFishId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.targetFishId_ = targetFishId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.multiple_ = multiple_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.specialFishId_ = specialFishId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fireGold_ = fireGold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (!other.targetFishId_.isEmpty()) {
          if (targetFishId_.isEmpty()) {
            targetFishId_ = other.targetFishId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTargetFishIdIsMutable();
            targetFishId_.addAll(other.targetFishId_);
          }
          onChanged();
        }
        if (other.hasMultiple()) {
          setMultiple(other.getMultiple());
        }
        if (other.hasSpecialFishId()) {
          setSpecialFishId(other.getSpecialFishId());
        }
        if (other.hasFireGold()) {
          setFireGold(other.getFireGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = FireResultReq];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultReq;
      /**
       * <code>optional .MID mid = 1 [default = FireResultReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = FireResultReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireResultReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireResultReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultReq;
        onChanged();
        return this;
      }

      // repeated int64 targetFishId = 3;
      private java.util.List<Long> targetFishId_ = java.util.Collections.emptyList();
      private void ensureTargetFishIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          targetFishId_ = new java.util.ArrayList<Long>(targetFishId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 targetFishId = 3;</code>
       *
       * <pre>
       *击中目标鱼ID
       * </pre>
       */
      public java.util.List<Long>
          getTargetFishIdList() {
        return java.util.Collections.unmodifiableList(targetFishId_);
      }
      /**
       * <code>repeated int64 targetFishId = 3;</code>
       *
       * <pre>
       *击中目标鱼ID
       * </pre>
       */
      public int getTargetFishIdCount() {
        return targetFishId_.size();
      }
      /**
       * <code>repeated int64 targetFishId = 3;</code>
       *
       * <pre>
       *击中目标鱼ID
       * </pre>
       */
      public long getTargetFishId(int index) {
        return targetFishId_.get(index);
      }
      /**
       * <code>repeated int64 targetFishId = 3;</code>
       *
       * <pre>
       *击中目标鱼ID
       * </pre>
       */
      public Builder setTargetFishId(
          int index, long value) {
        ensureTargetFishIdIsMutable();
        targetFishId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 targetFishId = 3;</code>
       *
       * <pre>
       *击中目标鱼ID
       * </pre>
       */
      public Builder addTargetFishId(long value) {
        ensureTargetFishIdIsMutable();
        targetFishId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 targetFishId = 3;</code>
       *
       * <pre>
       *击中目标鱼ID
       * </pre>
       */
      public Builder addAllTargetFishId(
          Iterable<? extends Long> values) {
        ensureTargetFishIdIsMutable();
        super.addAll(values, targetFishId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 targetFishId = 3;</code>
       *
       * <pre>
       *击中目标鱼ID
       * </pre>
       */
      public Builder clearTargetFishId() {
        targetFishId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 multiple = 4;
      private int multiple_ ;
      /**
       * <code>optional int32 multiple = 4;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼
       * </pre>
       */
      public boolean hasMultiple() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 multiple = 4;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼
       * </pre>
       */
      public int getMultiple() {
        return multiple_;
      }
      /**
       * <code>optional int32 multiple = 4;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼
       * </pre>
       */
      public Builder setMultiple(int value) {
        bitField0_ |= 0x00000004;
        multiple_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 multiple = 4;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼
       * </pre>
       */
      public Builder clearMultiple() {
        bitField0_ = (bitField0_ & ~0x00000004);
        multiple_ = 0;
        onChanged();
        return this;
      }

      // optional int64 specialFishId = 5;
      private long specialFishId_ ;
      /**
       * <code>optional int64 specialFishId = 5;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public boolean hasSpecialFishId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 specialFishId = 5;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public long getSpecialFishId() {
        return specialFishId_;
      }
      /**
       * <code>optional int64 specialFishId = 5;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public Builder setSpecialFishId(long value) {
        bitField0_ |= 0x00000008;
        specialFishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 specialFishId = 5;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public Builder clearSpecialFishId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        specialFishId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 fireGold = 6;
      private int fireGold_ ;
      /**
       * <code>optional int32 fireGold = 6;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public boolean hasFireGold() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 fireGold = 6;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public int getFireGold() {
        return fireGold_;
      }
      /**
       * <code>optional int32 fireGold = 6;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public Builder setFireGold(int value) {
        bitField0_ |= 0x00000010;
        fireGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fireGold = 6;</code>
       *
       * <pre>
       *开炮金币
       * </pre>
       */
      public Builder clearFireGold() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fireGold_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FireResultRequest)
    }

    static {
      defaultInstance = new FireResultRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FireResultRequest)
  }

  public interface FireResultResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = FireResultRes];
    /**
     * <code>optional .MID mid = 1 [default = FireResultRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = FireResultRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();

    // optional int64 rid = 2;
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    boolean hasRid();
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    long getRid();

    // repeated int64 dieFishId = 3;
    /**
     * <code>repeated int64 dieFishId = 3;</code>
     *
     * <pre>
     *死亡获分的鱼ID
     * </pre>
     */
    java.util.List<Long> getDieFishIdList();
    /**
     * <code>repeated int64 dieFishId = 3;</code>
     *
     * <pre>
     *死亡获分的鱼ID
     * </pre>
     */
    int getDieFishIdCount();
    /**
     * <code>repeated int64 dieFishId = 3;</code>
     *
     * <pre>
     *死亡获分的鱼ID
     * </pre>
     */
    long getDieFishId(int index);

    // optional int64 gold = 4;
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家当前金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家当前金币
     * </pre>
     */
    long getGold();

    // optional int32 multiple = 5;
    /**
     * <code>optional int32 multiple = 5;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
     * </pre>
     */
    boolean hasMultiple();
    /**
     * <code>optional int32 multiple = 5;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
     * </pre>
     */
    int getMultiple();

    // optional int64 specialFishId = 6;
    /**
     * <code>optional int64 specialFishId = 6;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    boolean hasSpecialFishId();
    /**
     * <code>optional int64 specialFishId = 6;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    long getSpecialFishId();

    // optional int64 accumulateGold = 7;
    /**
     * <code>optional int64 accumulateGold = 7;</code>
     *
     * <pre>
     *累积池金币
     * </pre>
     */
    boolean hasAccumulateGold();
    /**
     * <code>optional int64 accumulateGold = 7;</code>
     *
     * <pre>
     *累积池金币
     * </pre>
     */
    long getAccumulateGold();
  }
  /**
   * Protobuf type {@code FireResultResponse}
   *
   * <pre>
   *伤害结果
   * </pre>
   */
  public static final class FireResultResponse extends
      com.google.protobuf.GeneratedMessage
      implements FireResultResponseOrBuilder {
    // Use FireResultResponse.newBuilder() to construct.
    private FireResultResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FireResultResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FireResultResponse defaultInstance;
    public static FireResultResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FireResultResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FireResultResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt64();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                dieFishId_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              dieFishId_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                dieFishId_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                dieFishId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              gold_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              multiple_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              specialFishId_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              accumulateGold_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          dieFishId_ = java.util.Collections.unmodifiableList(dieFishId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_FireResultResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_FireResultResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FireResultResponse> PARSER =
        new com.google.protobuf.AbstractParser<FireResultResponse>() {
      public FireResultResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FireResultResponse(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<FireResultResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = FireResultRes];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = FireResultRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = FireResultRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    // optional int64 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private long rid_;
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 rid = 2;</code>
     *
     * <pre>
     *开炮的玩家ID
     * </pre>
     */
    public long getRid() {
      return rid_;
    }

    // repeated int64 dieFishId = 3;
    public static final int DIEFISHID_FIELD_NUMBER = 3;
    private java.util.List<Long> dieFishId_;
    /**
     * <code>repeated int64 dieFishId = 3;</code>
     *
     * <pre>
     *死亡获分的鱼ID
     * </pre>
     */
    public java.util.List<Long>
        getDieFishIdList() {
      return dieFishId_;
    }
    /**
     * <code>repeated int64 dieFishId = 3;</code>
     *
     * <pre>
     *死亡获分的鱼ID
     * </pre>
     */
    public int getDieFishIdCount() {
      return dieFishId_.size();
    }
    /**
     * <code>repeated int64 dieFishId = 3;</code>
     *
     * <pre>
     *死亡获分的鱼ID
     * </pre>
     */
    public long getDieFishId(int index) {
      return dieFishId_.get(index);
    }

    // optional int64 gold = 4;
    public static final int GOLD_FIELD_NUMBER = 4;
    private long gold_;
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家当前金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家当前金币
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    // optional int32 multiple = 5;
    public static final int MULTIPLE_FIELD_NUMBER = 5;
    private int multiple_;
    /**
     * <code>optional int32 multiple = 5;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
     * </pre>
     */
    public boolean hasMultiple() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 multiple = 5;</code>
     *
     * <pre>
     *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
     * </pre>
     */
    public int getMultiple() {
      return multiple_;
    }

    // optional int64 specialFishId = 6;
    public static final int SPECIALFISHID_FIELD_NUMBER = 6;
    private long specialFishId_;
    /**
     * <code>optional int64 specialFishId = 6;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    public boolean hasSpecialFishId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 specialFishId = 6;</code>
     *
     * <pre>
     *特殊鱼ID
     * </pre>
     */
    public long getSpecialFishId() {
      return specialFishId_;
    }

    // optional int64 accumulateGold = 7;
    public static final int ACCUMULATEGOLD_FIELD_NUMBER = 7;
    private long accumulateGold_;
    /**
     * <code>optional int64 accumulateGold = 7;</code>
     *
     * <pre>
     *累积池金币
     * </pre>
     */
    public boolean hasAccumulateGold() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 accumulateGold = 7;</code>
     *
     * <pre>
     *累积池金币
     * </pre>
     */
    public long getAccumulateGold() {
      return accumulateGold_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultRes;
      rid_ = 0L;
      dieFishId_ = java.util.Collections.emptyList();
      gold_ = 0L;
      multiple_ = 0;
      specialFishId_ = 0L;
      accumulateGold_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, rid_);
      }
      for (int i = 0; i < dieFishId_.size(); i++) {
        output.writeInt64(3, dieFishId_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, multiple_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, specialFishId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(7, accumulateGold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, rid_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dieFishId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dieFishId_.get(i));
        }
        size += dataSize;
        size += 1 * getDieFishIdList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, multiple_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, specialFishId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, accumulateGold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FireResultResponse}
     *
     * <pre>
     *伤害结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_FireResultResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_FireResultResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultRes;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        dieFishId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        multiple_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        specialFishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        accumulateGold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_FireResultResponse_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          dieFishId_ = java.util.Collections.unmodifiableList(dieFishId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.dieFishId_ = dieFishId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.multiple_ = multiple_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.specialFishId_ = specialFishId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.accumulateGold_ = accumulateGold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (!other.dieFishId_.isEmpty()) {
          if (dieFishId_.isEmpty()) {
            dieFishId_ = other.dieFishId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDieFishIdIsMutable();
            dieFishId_.addAll(other.dieFishId_);
          }
          onChanged();
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasMultiple()) {
          setMultiple(other.getMultiple());
        }
        if (other.hasSpecialFishId()) {
          setSpecialFishId(other.getSpecialFishId());
        }
        if (other.hasAccumulateGold()) {
          setAccumulateGold(other.getAccumulateGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.FireResultResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = FireResultRes];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultRes;
      /**
       * <code>optional .MID mid = 1 [default = FireResultRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = FireResultRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireResultRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = FireResultRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.FireResultRes;
        onChanged();
        return this;
      }

      // optional int64 rid = 2;
      private long rid_ ;
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public long getRid() {
        return rid_;
      }
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public Builder setRid(long value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rid = 2;</code>
       *
       * <pre>
       *开炮的玩家ID
       * </pre>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 dieFishId = 3;
      private java.util.List<Long> dieFishId_ = java.util.Collections.emptyList();
      private void ensureDieFishIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          dieFishId_ = new java.util.ArrayList<Long>(dieFishId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 dieFishId = 3;</code>
       *
       * <pre>
       *死亡获分的鱼ID
       * </pre>
       */
      public java.util.List<Long>
          getDieFishIdList() {
        return java.util.Collections.unmodifiableList(dieFishId_);
      }
      /**
       * <code>repeated int64 dieFishId = 3;</code>
       *
       * <pre>
       *死亡获分的鱼ID
       * </pre>
       */
      public int getDieFishIdCount() {
        return dieFishId_.size();
      }
      /**
       * <code>repeated int64 dieFishId = 3;</code>
       *
       * <pre>
       *死亡获分的鱼ID
       * </pre>
       */
      public long getDieFishId(int index) {
        return dieFishId_.get(index);
      }
      /**
       * <code>repeated int64 dieFishId = 3;</code>
       *
       * <pre>
       *死亡获分的鱼ID
       * </pre>
       */
      public Builder setDieFishId(
          int index, long value) {
        ensureDieFishIdIsMutable();
        dieFishId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dieFishId = 3;</code>
       *
       * <pre>
       *死亡获分的鱼ID
       * </pre>
       */
      public Builder addDieFishId(long value) {
        ensureDieFishIdIsMutable();
        dieFishId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dieFishId = 3;</code>
       *
       * <pre>
       *死亡获分的鱼ID
       * </pre>
       */
      public Builder addAllDieFishId(
          Iterable<? extends Long> values) {
        ensureDieFishIdIsMutable();
        super.addAll(values, dieFishId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dieFishId = 3;</code>
       *
       * <pre>
       *死亡获分的鱼ID
       * </pre>
       */
      public Builder clearDieFishId() {
        dieFishId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int64 gold = 4;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家当前金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家当前金币
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家当前金币
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00000008;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家当前金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 multiple = 5;
      private int multiple_ ;
      /**
       * <code>optional int32 multiple = 5;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
       * </pre>
       */
      public boolean hasMultiple() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 multiple = 5;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
       * </pre>
       */
      public int getMultiple() {
        return multiple_;
      }
      /**
       * <code>optional int32 multiple = 5;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
       * </pre>
       */
      public Builder setMultiple(int value) {
        bitField0_ |= 0x00000010;
        multiple_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 multiple = 5;</code>
       *
       * <pre>
       *特殊鱼计算的倍数 0普通鱼 -1获得累积奖
       * </pre>
       */
      public Builder clearMultiple() {
        bitField0_ = (bitField0_ & ~0x00000010);
        multiple_ = 0;
        onChanged();
        return this;
      }

      // optional int64 specialFishId = 6;
      private long specialFishId_ ;
      /**
       * <code>optional int64 specialFishId = 6;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public boolean hasSpecialFishId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 specialFishId = 6;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public long getSpecialFishId() {
        return specialFishId_;
      }
      /**
       * <code>optional int64 specialFishId = 6;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public Builder setSpecialFishId(long value) {
        bitField0_ |= 0x00000020;
        specialFishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 specialFishId = 6;</code>
       *
       * <pre>
       *特殊鱼ID
       * </pre>
       */
      public Builder clearSpecialFishId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        specialFishId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 accumulateGold = 7;
      private long accumulateGold_ ;
      /**
       * <code>optional int64 accumulateGold = 7;</code>
       *
       * <pre>
       *累积池金币
       * </pre>
       */
      public boolean hasAccumulateGold() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 accumulateGold = 7;</code>
       *
       * <pre>
       *累积池金币
       * </pre>
       */
      public long getAccumulateGold() {
        return accumulateGold_;
      }
      /**
       * <code>optional int64 accumulateGold = 7;</code>
       *
       * <pre>
       *累积池金币
       * </pre>
       */
      public Builder setAccumulateGold(long value) {
        bitField0_ |= 0x00000040;
        accumulateGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accumulateGold = 7;</code>
       *
       * <pre>
       *累积池金币
       * </pre>
       */
      public Builder clearAccumulateGold() {
        bitField0_ = (bitField0_ & ~0x00000040);
        accumulateGold_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FireResultResponse)
    }

    static {
      defaultInstance = new FireResultResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FireResultResponse)
  }

  public interface GunLeveUpRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = GunLeveUpReq];
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();
  }
  /**
   * Protobuf type {@code GunLeveUpRequest}
   *
   * <pre>
   *升级炮台
   * </pre>
   */
  public static final class GunLeveUpRequest extends
      com.google.protobuf.GeneratedMessage
      implements GunLeveUpRequestOrBuilder {
    // Use GunLeveUpRequest.newBuilder() to construct.
    private GunLeveUpRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GunLeveUpRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GunLeveUpRequest defaultInstance;
    public static GunLeveUpRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GunLeveUpRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GunLeveUpRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GunLeveUpRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GunLeveUpRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GunLeveUpRequest> PARSER =
        new com.google.protobuf.AbstractParser<GunLeveUpRequest>() {
      public GunLeveUpRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GunLeveUpRequest(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GunLeveUpRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = GunLeveUpReq];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpReq;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GunLeveUpRequest}
     *
     * <pre>
     *升级炮台
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GunLeveUpRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GunLeveUpRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpReq;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GunLeveUpRequest_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = GunLeveUpReq];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpReq;
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpReq];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpReq;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GunLeveUpRequest)
    }

    static {
      defaultInstance = new GunLeveUpRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GunLeveUpRequest)
  }

  public interface GunLeveUpResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .MID mid = 1 [default = GunLeveUpRes];
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    boolean hasMid();
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    info.xiaomo.server.protocol.Mid.MID getMid();

    // optional int32 result = 2;
    /**
     * <code>optional int32 result = 2;</code>
     */
    boolean hasResult();
    /**
     * <code>optional int32 result = 2;</code>
     */
    int getResult();
  }
  /**
   * Protobuf type {@code GunLeveUpResponse}
   *
   * <pre>
   *升级炮台
   * </pre>
   */
  public static final class GunLeveUpResponse extends
      com.google.protobuf.GeneratedMessage
      implements GunLeveUpResponseOrBuilder {
    // Use GunLeveUpResponse.newBuilder() to construct.
    private GunLeveUpResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GunLeveUpResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GunLeveUpResponse defaultInstance;
    public static GunLeveUpResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GunLeveUpResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GunLeveUpResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              info.xiaomo.server.protocol.Mid.MID value = info.xiaomo.server.protocol.Mid.MID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mid_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              result_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GunLeveUpResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GunLeveUpResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GunLeveUpResponse> PARSER =
        new com.google.protobuf.AbstractParser<GunLeveUpResponse>() {
      public GunLeveUpResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GunLeveUpResponse(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GunLeveUpResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .MID mid = 1 [default = GunLeveUpRes];
    public static final int MID_FIELD_NUMBER = 1;
    private info.xiaomo.server.protocol.Mid.MID mid_;
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
     *
     * <pre>
     *消息id
     * </pre>
     */
    public info.xiaomo.server.protocol.Mid.MID getMid() {
      return mid_;
    }

    // optional int32 result = 2;
    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_;
    /**
     * <code>optional int32 result = 2;</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 result = 2;</code>
     */
    public int getResult() {
      return result_;
    }

    private void initFields() {
      mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpRes;
      result_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, result_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GunLeveUpResponse}
     *
     * <pre>
     *升级炮台
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GunLeveUpResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GunLeveUpResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse.class, info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse.Builder.class);
      }

      // Construct using info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpRes;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GunLeveUpResponse_descriptor;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse build() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse buildPartial() {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse result = new info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse) {
          return mergeFrom((info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.xiaomo.server.protocol.bydr.BydrFightMessage.GunLeveUpResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .MID mid = 1 [default = GunLeveUpRes];
      private info.xiaomo.server.protocol.Mid.MID mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpRes;
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public info.xiaomo.server.protocol.Mid.MID getMid() {
        return mid_;
      }
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder setMid(info.xiaomo.server.protocol.Mid.MID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MID mid = 1 [default = GunLeveUpRes];</code>
       *
       * <pre>
       *消息id
       * </pre>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = info.xiaomo.server.protocol.Mid.MID.GunLeveUpRes;
        onChanged();
        return this;
      }

      // optional int32 result = 2;
      private int result_ ;
      /**
       * <code>optional int32 result = 2;</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 result = 2;</code>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional int32 result = 2;</code>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000002;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 result = 2;</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GunLeveUpResponse)
    }

    static {
      defaultInstance = new GunLeveUpResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GunLeveUpResponse)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UseSkillRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UseSkillRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UseSkillResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UseSkillResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FireRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FireRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FireResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FireResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FireResultRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FireResultRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FireResultResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FireResultResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GunLeveUpRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GunLeveUpRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GunLeveUpResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GunLeveUpResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\026BydrFightMessage.proto\032\tMid.proto\"B\n\017U" +
      "seSkillRequest\022\036\n\003mid\030\001 \001(\0162\004.MID:\013UseSk" +
      "illReq\022\017\n\007skillId\030\002 \001(\005\"`\n\020UseSkillRespo" +
      "nse\022\036\n\003mid\030\001 \001(\0162\004.MID:\013UseSkillRes\022\013\n\003r" +
      "id\030\002 \001(\003\022\017\n\007skillId\030\003 \001(\005\022\016\n\006result\030\004 \001(" +
      "\005\"m\n\013FireRequest\022\032\n\003mid\030\001 \001(\0162\004.MID:\007Fir" +
      "eReq\022\014\n\004gold\030\003 \001(\005\022\016\n\006angleX\030\004 \001(\002\022\016\n\006an" +
      "gleY\030\005 \001(\002\022\024\n\014targetFishId\030\006 \001(\003\"{\n\014Fire" +
      "Response\022\032\n\003mid\030\001 \001(\0162\004.MID:\007FireRes\022\013\n\003" +
      "rid\030\003 \001(\003\022\014\n\004gold\030\004 \001(\005\022\016\n\006angleX\030\005 \001(\002\022",
      "\016\n\006angleY\030\006 \001(\002\022\024\n\014targetFishId\030\007 \001(\003\"\206\001" +
      "\n\021FireResultRequest\022 \n\003mid\030\001 \001(\0162\004.MID:\r" +
      "FireResultReq\022\024\n\014targetFishId\030\003 \003(\003\022\020\n\010m" +
      "ultiple\030\004 \001(\005\022\025\n\rspecialFishId\030\005 \001(\003\022\020\n\010" +
      "fireGold\030\006 \001(\005\"\245\001\n\022FireResultResponse\022 \n" +
      "\003mid\030\001 \001(\0162\004.MID:\rFireResultRes\022\013\n\003rid\030\002" +
      " \001(\003\022\021\n\tdieFishId\030\003 \003(\003\022\014\n\004gold\030\004 \001(\003\022\020\n" +
      "\010multiple\030\005 \001(\005\022\025\n\rspecialFishId\030\006 \001(\003\022\026" +
      "\n\016accumulateGold\030\007 \001(\003\"3\n\020GunLeveUpReque" +
      "st\022\037\n\003mid\030\001 \001(\0162\004.MID:\014GunLeveUpReq\"D\n\021G",
      "unLeveUpResponse\022\037\n\003mid\030\001 \001(\0162\004.MID:\014Gun" +
      "LeveUpRes\022\016\n\006result\030\002 \001(\005B\033\n\031com.jzy.gam" +
      "e.message.bydr"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_UseSkillRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_UseSkillRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UseSkillRequest_descriptor,
              new String[] { "Mid", "SkillId", });
          internal_static_UseSkillResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_UseSkillResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UseSkillResponse_descriptor,
              new String[] { "Mid", "Rid", "SkillId", "Result", });
          internal_static_FireRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_FireRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FireRequest_descriptor,
              new String[] { "Mid", "Gold", "AngleX", "AngleY", "TargetFishId", });
          internal_static_FireResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_FireResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FireResponse_descriptor,
              new String[] { "Mid", "Rid", "Gold", "AngleX", "AngleY", "TargetFishId", });
          internal_static_FireResultRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_FireResultRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FireResultRequest_descriptor,
              new String[] { "Mid", "TargetFishId", "Multiple", "SpecialFishId", "FireGold", });
          internal_static_FireResultResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_FireResultResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FireResultResponse_descriptor,
              new String[] { "Mid", "Rid", "DieFishId", "Gold", "Multiple", "SpecialFishId", "AccumulateGold", });
          internal_static_GunLeveUpRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_GunLeveUpRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GunLeveUpRequest_descriptor,
              new String[] { "Mid", });
          internal_static_GunLeveUpResponse_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_GunLeveUpResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GunLeveUpResponse_descriptor,
              new String[] { "Mid", "Result", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          info.xiaomo.server.protocol.Mid.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
